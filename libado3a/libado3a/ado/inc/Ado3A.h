#pragma once
#include "Ado.h"



//Customer table
#define CUSTOMER_3A_TAB_CFG							"Customer"
//Users
#define USERS_3A_TAB_CFG							"Users"
//CustomerProduct table 
#define CUSTOMER_PRODUCT_3A_TAB_CFG					"CustomerProduct"
//CustomerProductDetails table 
#define CUSTOMER_PRODUCT_DETAILS_3A_TAB_CFG			"CustomerProductDetails"
//Account_Hospital table 
#define ACCOUNT_HOSPITAL_3A_TAB_CFG					"AccountHospital"
//CustomerAccount table 
#define CUSTOMER_ACCOUNT_3A_TAB_CFG					"CustomerAccount"
//ServiceUseRecords table 
#define SERVICE_USER_RECORDS_3A_TAB_CFG				"ServiceUseRecords"
//BalanceDetails table 
#define BALANCE_DETAILS_3A_TAB_CFG					"BalanceDetails"
//RechargeRecords table
#define RECHARGE_RECORDS_3A_TAB_CFG					"RechargeRecords"
//Service
#define SERVICE_3A_TAB_CFG							"Service"



//customer
typedef enum TABCUSTOMERIDX
{
	TABCUSTOMERIDX_CUSTOMER_ID = 0,
	TABCUSTOMERIDX_LOGIN_NAME,
	TABCUSTOMERIDX_CUSTOMER_CODE,
	TABCUSTOMERIDX_PASSWORD,
	TABCUSTOMERIDX_CORPORATION,
	TABCUSTOMERIDX_CORPORATION_ID_CARD,
	TABCUSTOMERIDX_COMPANY,
	TABCUSTOMERIDX_EMAIL,
	TABCUSTOMERIDX_ADDRESS,
	TABCUSTOMERIDX_AGENT_ID,
	TABCUSTOMERIDX_DESCRIPTION,	
	TABCUSTOMERIDX_QQNUM,
	TABCUSTOMERIDX_OPERATOR_MOBILE,
	TABCUSTOMERIDX_OPERATOR_TELPHONE,
	TABCUSTOMERIDX_OPERATOR_FAX_NUM,
	TABCUSTOMERIDX_CUSTOMER_TYPE_ID,
	TABCUSTOMERIDX_CUSETOMER_AREA_ID,
	TABCUSTOMERIDX_CREATE_TIME,
	TABCUSTOMERIDX_UPDATE_TIME,
	TABCUSTOMERIDX_OPERATOR,
	TABCUSTOMERIDX_QUALIFICATION1,
	TABCUSTOMERIDX_QUALIFICATION2,
	TABCUSTOMERIDX_QUALIFICATION3,
	TABCUSTOMERIDX_QUALIFICATION4,
	TABCUSTOMERIDX_QUALIFICATION5
		
};

//CustomerProduct
typedef enum TABCUSTOMERPRODUCTIDX
{
	TABCUSTOMERPRODUCT_PRODUCT_ID = 0,
	TABCUSTOMERPRODUCT_PRODUCT_CODE,
	TABCUSTOMERPRODUCT_PRODUCT_NAME,
	TABCUSTOMERPRODUCT_CHANGEMODE,
	TABCUSTOMERPRODUCT_CUSTOMER_ID,
	TABCUSTOMERPRODUCT_PRICE,
	TABCUSTOMERPRODUCT_DEPOSIT,
	TABCUSTOMERPRODUCT_ORDER_ID,
	TABCUSTOMERPRODUCT_ORDER_TIME,	
	TABCUSTOMERPRODUCT_EFFECT_TIME,
	TABCUSTOMERPRODUCT_EXP_TIME,
	TABCUSTOMERPRODUCT_ACCOUNT_ID

};


//CustomerProductDetails
typedef enum TABPRODUCTDETAILSIDX
{
	TABPRODUCTDETAILS_DETAILS_ID = 0,
	TABPRODUCTDETAILS_DETAILS_CODE,
	TABPRODUCTDETAILS_PRODUCT_ID,
	TABPRODUCTDETAILS_SERVICE_ID,
	TABPRODUCTDETAILS_CHARGE_TYPE,
	TABPRODUCTDETAILS_PRICE,
	TABPRODUCTDETAILS_FREE_SERVICE_NUM,
	TABPRODUCTDETAILS_EXCEED_PRICE,
	TABPRODUCTDETAILS_SALE_DEVICE_TYPE_ID,	
	TABPRODUCTDETAILS_SALE_DEVICE_NUM,
	TABPRODUCTDETAILS_CHARGE_TIME,
	TABPRODUCTDETAILS_NEXT_CHARGE_TIME,
	TABPRODUCTDETAILS_REMAIN_SERVICE_NUM,
	TABPRODUCTDETAILS_CHARGE_NUM

};

typedef enum TABCUSTOMERPRODUCTANDDETAILSIDX
{
	TABCUSTOMERPRODUCTANDDETAILS_PRODUCT_ID = 0,
	TABCUSTOMERPRODUCTANDDETAILS_PRODUCT_CODE,
	TABCUSTOMERPRODUCTANDDETAILS_PRODUCT_NAME,
	TABCUSTOMERPRODUCTANDDETAILS_CHARGEMODE,
	TABCUSTOMERPRODUCTANDDETAILS_CUSTOMER_ID,
	TABCUSTOMERPRODUCTANDDETAILS_PRICE,
	TABCUSTOMERPRODUCTANDDETAILS_DEPOSIT,	
	TABCUSTOMERPRODUCTANDDETAILS_ORDER_ID,	
	TABCUSTOMERPRODUCTANDDETAILS_ORDER_TIME,
	TABCUSTOMERPRODUCTANDDETAILS_EFFECT_TIME,
	TABCUSTOMERPRODUCTANDDETAILS_EXP_TIME,	
	TABCUSTOMERPRODUCTANDDETAILS_ACCOUNT_ID,
	TABCUSTOMERPRODUCTANDDETAILS_IS_VALID,
	TABCUSTOMERPRODUCTANDDETAILS_UPDATE_TIME,
	TABCUSTOMERPRODUCTANDDETAILS_IsCharge,

	TABPRODUCTDETAILSANDDETAILS_DETAILS_ID,
	TABPRODUCTDETAILSANDDETAILS_DETAILS_CODE,
	TABPRODUCTDETAILSANDDETAILS_PRODUCTDETAILS_ID,
	TABPRODUCTDETAILSANDDETAILS_SERVICE_ID,
	TABPRODUCTDETAILSANDDETAILS_CHARGE_TYPE,
	TABPRODUCTDETAILSANDDETAILS_PRODUCTANDDETAILS_PRICE,
	TABPRODUCTDETAILSANDDETAILS_FREE_SERVICE_NUM,
	TABPRODUCTDETAILSANDDETAILS_EXCEED_PRICE,
	TABPRODUCTDETAILSANDDETAILS_SALE_DEVICE_TYPE_ID,
	TABPRODUCTDETAILSANDDETAILS_SALE_DEVICE_NUM,		
	TABPRODUCTDETAILSANDDETAILS_CHARGE_TIME,
	TABPRODUCTDETAILSANDDETAILS_NEXT_CHARGE_TIME,
	TABPRODUCTDETAILSANDDETAILS_REMAIN_SERVICE_NUM,
	TABPRODUCTDETAILSANDDETAILS_CHARGE_NUM

};



typedef enum TABACCOUNTHOSPITALIDX
{
	TABACCOUNTHOSPITAL_ACCOUNT_HOSPITAL_ID = 0,
	TABACCOUNTHOSPITAL_ACCOUNT_ID,
	TABACCOUNTHOSPITAL_MEDICALORG_ID

};


typedef enum TABSERVICEUSERECORDSIDX
{
	TABSERVICEUSERECORDS_ID = 0,
};

//CustomerAccount
typedef enum TABCUSTOMERACCOUNTIDX
{
	TABCUSTOMERACCOUNT_ACCOUNTID = 0,
	TABCUSTOMERACCOUNT_ACCOUNT_CODE,
	TABCUSTOMERACCOUNT_BALANCE,
	TABCUSTOMERACCOUNT_OFFERBALANCE,
	TABCUSTOMERACCOUNT_USERID,
	TABCUSTOMERACCOUNT_TRANSACTION_PASSWD,
	TABCUSTOMERACCOUNT_DEPOSIT,
	TABCUSTOMERACCOUNT_CREATETIME

};





class CAdo3A
{
public:
	static CAdo3A *GetInstance();
	~CAdo3A(void);

public:
	ADORES AdoInitDb(IN const ADOCHAR *szDbServerIp,IN const ADOCHAR *szDbName,IN const ADOCHAR *szDbUser, IN const ADOCHAR *szDbPasswd);
	//transaction
	ADORES AdoBeginTransaction();
	ADORES AdoCommitTransaction();
	ADORES AdoRollBackTransaction();


	//Customer£º
	ADORES Ado3AQueryCustomer(OUT CUSTOMER &customer, IN const ADOCHAR *username, IN const ADOCHAR *passwd);

	//Users
	ADORES Ado3AQueryUsers(OUT USERS &user, IN const ADOCHAR *username, IN const ADOCHAR *passwd);


	//CustomerProduct
	ADORES Ado3AQueryCustomerProduct(OUT CUSTOMERPRODUCT &customerproduct, IN ADOINT nProductID);
	ADORES Ado3AUpdateCustomerProduct(IN ADOINT nProductID, IN ADOINT price);
	ADORES Ado3AUpdateCustomerProductIsCharge(IN ADOINT nProductID, IN ADOINT nIsCharge);

	
	ADORES Ado3AQueryCustomerProductAndProductDetailsPoint(OUT PRODUCTANDPRODUCTDETAILS **pp, OUT ADOUINT &pNum, IN ADOINT AccountID, IN ADOINT ServiceID);
	ADORES Ado3AFreeMemoryQueryCustomerProductAndProductDetailsPoint(PRODUCTANDPRODUCTDETAILS *&pp);
	
	ADORES Ado3AQueryCustomerProductAndProductDetailsNextChargeTime(OUT PRODUCTANDPRODUCTDETAILS **pp, OUT ADOUINT &pNum, IN const ADOCHAR *szBeginTime, IN const ADOCHAR *szEndTime);
	ADORES Ado3AQueryFreeMemoryCustomerProductAndProductDetailsNextChargeTime(IN PRODUCTANDPRODUCTDETAILS *&pp);



	//CustomerProductDetails
	ADORES Ado3AQueryCustomerProductDetails(OUT CUSTOMERPRODUCTDETAILS &productdetails, IN ADOINT nProductDetailsID);
	ADORES Ado3AUpdateCustomerProductDetails(IN CUSTOMERPRODUCTDETAILS productdetails, IN ADOINT nProductDetailsID);
	ADORES Ado3AUpdateCustomerProductDetailsRemainServiceNum(IN ADOINT nProductDetailsID, IN ADOINT nRemainServiceNum);
	ADORES Ado3AUpdateCustomerProductDetailsPrice(IN ADOINT nProductDetailsID, IN ADOINT price);
	ADORES Ado3AUpdateCustomerProductDetailExceedPrice(IN ADOINT nProductDetailsID, IN ADOINT exceedprice);


	//Account_Hospital
	ADORES Ado3AQueryAccountHospital(OUT ACCOUNTHOSTPITAL &accounthospital, IN ADOINT nAccountHospitalID);
	ADORES Ado3AQueryAccountHospitalMedicalOrgId(OUT ACCOUNTHOSTPITAL &accounthospital, IN const ADOCHAR *szMedicalOrgId);


	//CustomerAccount
	ADORES Ado3AQueryCustomerAccount(IN CUSTOMERACCOUNT &customeraccount, IN ADOINT AccountID);
	ADORES Ado3AUpdateCustomerAccountBalance(IN ADOINT AccountID, IN ADOINT balance);
	ADORES Ado3AUpdateCustomerAccountOfferBalance(IN ADOINT AccountID, IN ADOINT offerbalance);
	ADORES Ado3AUpdateCustomerAccountBalanceAndOfferBalance(IN ADOINT AccountID, IN ADOINT balance, IN ADOINT offerbalance);


	//ServiceUseRecords
	ADORES Ado3AInsertServiceUseRecords(SERVICERECORDS &UseRecord);
	ADORES Ado3AQueryServiceUseLastRecordsID(OUT ADOUINT &nRecordsID);

	//BalanceDetails
	ADORES Ado3AInsertBalanceDetails(BALANCEDETAILS &BalanceDetail);

	//RechargeRecords
	ADORES Ado3AQueryRechargeRecords(OUT RECHARGERECORDS **pp, OUT ADOINT &nNum, IN ADOINT nAccountID, bool bASC, ADOINT LimitNum);
	ADORES Ado3AFreeMemoryQueryRechargeRecords(IN RECHARGERECORDS *&pp);
	ADORES Ado3AInsertRechargeRecords(IN RECHARGERECORDS &rechargerecords);

	//Service
	ADORES Ado3AQueryService(OUT SERVICE &service, IN const ADOCHAR *szServiceCode);

	//release resource
	ADORES AdoClose();



private:
	explicit CAdo3A(void);
	static CAdo3A *m_gpCAdo3A;
	

	Ado::CAdo ado;
	CRITICAL_SECTION m_csMutex;


};

